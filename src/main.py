#!/usr/bin/env python3
"""
–ö–æ–Ω—Å–æ–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã —á–µ—Ä–µ–∑ wttr.in
"""

import argparse
import sys
from weather_app import cli, cache


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    parser = argparse.ArgumentParser(
        description="–ö–æ–Ω—Å–æ–ª—å–Ω–∏–π –¥–æ–¥–∞—Ç–æ–∫ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–∏",
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog="""
–ü—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
  ./weather                      # –ü–æ–≥–æ–¥–∞ –∑–∞ –∞–≤—Ç–æ–≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è–º IP
  ./weather --city Kyiv          # –ü–æ–≥–æ–¥–∞ –¥–ª—è –ö–∏—î–≤–∞
  ./weather --city "New York"    # –ü–æ–≥–æ–¥–∞ –¥–ª—è –º—ñ—Å—Ç–∞ –∑ –ø—Ä–æ–±—ñ–ª–æ–º
  ./weather --watch              # –ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–∂–Ω—ñ 5 —Ö–≤–∏–ª–∏–Ω
  ./weather --watch 60           # –ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–∂–Ω—É —Ö–≤–∏–ª–∏–Ω—É
  ./weather --no-cache           # –ë–µ–∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–µ—à—É
  ./weather --ttl 600            # –í—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ TTL –∫–µ—à—É 10 —Ö–≤–∏–ª–∏–Ω
        """
    )

    # –î–æ–¥–∞—î–º–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∏
    parser.add_argument(
        '--city', '-c',
        type=str,
        help='–ù–∞–∑–≤–∞ –º—ñ—Å—Ç–∞ (—è–∫—â–æ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ - –∞–≤—Ç–æ–≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ IP)'
    )
    
    parser.add_argument(
        '--watch', '-w',
        nargs='?',
        const=300,
        type=int,
        metavar='SECONDS',
        help='–†–µ–∂–∏–º –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑ —ñ–Ω—Ç–µ—Ä–≤–∞–ª–æ–º —É —Å–µ–∫—É–Ω–¥–∞—Ö (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 300)'
    )
    
    parser.add_argument(
        '--no-cache',
        action='store_true',
        help='–ù–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –∫–µ—à'
    )
    
    parser.add_argument(
        '--ttl',
        type=int,
        default=cache.DEFAULT_TTL,
        help=f'TTL –∫–µ—à—É –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º {cache.DEFAULT_TTL})'
    )
    
    parser.add_argument(
        '--version', '-v',
        action='version',
        version='./weather 1.0.0'
    )

    # –ü–∞—Ä—Å–∏–º–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∏
    args = parser.parse_args()

    # –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ä–µ–∂–∏–º —Ä–æ–±–æ—Ç–∏
    use_cache = not args.no_cache

    # –Ø–∫—â–æ –≤–∫–∞–∑–∞–Ω–æ —Ä–µ–∂–∏–º watch
    if args.watch is not None:
        # –í —Ä–µ–∂–∏–º—ñ watch, —è–∫—â–æ –º—ñ—Å—Ç–æ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ - –∑–∞–ø–∏—Ç—É—î–º–æ —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        city = args.city
        if city is None:
            city = cli.get_user_choice()
        
        cli.watch_mode(
            city=city,
            interval=args.watch,
            use_cache=use_cache,
            ttl=args.ttl
        )
    else:
        # –ó–≤–∏—á–∞–π–Ω–∏–π —Ä–µ–∂–∏–º - –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–∏–π –≤–∏–≤—ñ–¥
        city = args.city

        # –Ø–∫—â–æ –º—ñ—Å—Ç–æ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ - –ø—Ä–æ–ø–æ–Ω—É—î–º–æ –≤–∏–±—ñ—Ä
        if city is None:
            city = cli.get_user_choice()
        
        success = cli.fetch_and_display_weather(
            city=city,
            use_cache=use_cache,
            ttl=args.ttl
        )
        
        if not success:
            sys.exit(1)


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\nüëã –í–∏—Ö—ñ–¥")
        sys.exit(0)
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {str(e)}", file=sys.stderr)
        sys.exit(1)
